{
    "contents" : "eye.parameterize.M <- function(FW,\n                               distribution.pairs = \"Normal\",\n                               mux = -1,\n                               muy = 0.5,\n                               sigmax = 1/4,\n                               sigmay = 1/4,\n                               rhoxy = -2/3,\n                               mu.diagonal = 0,\n                               sigma.diagonal = 0){\n  S <- FW$S\n  M <- matrix(0, S, S)\n  ## Get off-diagonal coefficients\n  NumPairs <- FW$L\n  if (is.matrix(distribution.pairs) == TRUE){\n    my.pairs <- eye.pairs.from.empirical(NumPairs = NumPairs,\n                                         Empirical.Distribution = distribution.pairs)\n  } else {\n    if (distribution.pairs == \"Normal\"){\n      my.pairs <- eye.pairs.from.normal(NumPairs = NumPairs,\n                                        mux = mux,\n                                        muy = muy,\n                                        sigmax = sigmax,\n                                        sigmay = sigmay,\n                                        rhoxy = rhoxy)\n    }\n    if (distribution.pairs == \"Normal\"){\n      my.pairs <- eye.pairs.from.normal(NumPairs = NumPairs,\n                                        mux = mux,\n                                        muy = muy,\n                                        sigmax = sigmax,\n                                        sigmay = sigmay,\n                                        rhoxy = rhoxy)\n    }\n  }\n  M[FW$links] <- my.pairs[ , 1]\n  M[FW$links[,2:1]] <- my.pairs[ , 2]\n  ## Optional: set diagonal\n  diag(M) <- rnorm(S, mean = mu.diagonal, sd = sigma.diagonal)\n  return(M)\n}\n\neye.buildfoodweb.and.parameterize.M <- function(foodweb.model,\n                                                S = 100,\n                                                C = 0.1,\n                                                distribution.pairs = \"Normal\",\n                                                mux = -1,\n                                                muy = 0.5,\n                                                sigmax = 1/4,\n                                                sigmay = 1/4,\n                                                rhoxy = -2/3,\n                                                mu.diagonal = 0,\n                                                sigma.diagonal = 0){\n  FW <- NULL\n  # if it's a file\n  if (file.exists(foodweb.model) == TRUE){\n    FW <- eye.foodweb.file(foodweb.model)\n  }\n  if (foodweb.model == \"Cascade\"){\n    FW <- eye.foodweb.cascade(S, C)\n  }\n  if (foodweb.model == \"Niche\"){\n    FW <- eye.foodweb.niche(S, C)\n  }\n  if (is.null(FW)){\n    stop(\"Invalid food web model. Please enter Cascade, Niche, or a file name for the adjacency matrix.\")\n  }\n  M <- eye.parameterize.M(FW, distribution.pairs, mux, muy, sigmax, sigmay, rhoxy, mu.diagonal, sigma.diagonal)\n  return(M)\n}\n",
    "created" : 1412462574341.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1121308066",
    "id" : "2F0310B1",
    "lastKnownWriteTime" : 1412464896,
    "path" : "~/RPackages/eyeball/R/buildcommunitymatrix.R",
    "project_path" : "R/buildcommunitymatrix.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}